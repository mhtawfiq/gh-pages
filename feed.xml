<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Mohamed H. Tawfiq</title>
    <link href="https://mhtawfiq.github.io/feed.xml" rel="self" />
    <link href="https://mhtawfiq.github.io" />
    <updated>2023-11-30T18:15:34+02:00</updated>
    <author>
        <name>Mohamed H. Tawfiq</name>
    </author>
    <id>https://mhtawfiq.github.io</id>

    <entry>
        <title>FileMaker Server Off-Site Backup &amp; Retention Policy with rclone</title>
        <author>
            <name>Mohamed H. Tawfiq</name>
        </author>
        <link href="https://mhtawfiq.github.io/filemaker-server-off-site-backup-and-retention-policy-with-rclone/"/>
        <id>https://mhtawfiq.github.io/filemaker-server-off-site-backup-and-retention-policy-with-rclone/</id>
        <media:content url="https://mhtawfiq.github.io/media/posts/7/Medium1x.png" medium="image" />
            <category term="rclone"/>
            <category term="github"/>
            <category term="Claris FileMaker"/>

        <updated>2023-11-30T18:15:34+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://mhtawfiq.github.io/media/posts/7/Medium1x.png" alt="" />
                    Off-site backups are important in case there are issues with the main server where local backups are stored making them&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://mhtawfiq.github.io/media/posts/7/Medium1x.png" class="type:primaryImage" alt="" /></p>
                <p>Off-site backups are important in case there are issues with the main server where local backups are stored making them unrecoverable.</p>
<p>It allows you to restore the server and also store long term backups for archival or legal reasons while leveraging cloud storage backends scalability and multi-geographical zone availability. </p>
<p>This guide will go through how to setup and use rclone with Claris FileMaker Server on Ubuntu Linux to automate the creation and maintenance of off-site backups and maintaining a backup retention policy using Amazon S3 as an affordable, scalable and highly available storage backend.</p>
<h4>What is rclone?</h4>
<p>rclone is an open source self contained command line tool to manage cloud storage. It can sync, copy and transfer data to many storage backends including Amazon S3 and others.</p>
<p class="msg msg--info"><a href="https://rclone.org/overview/">rclone Overview &amp; supported storage backends</a></p>
<h4>Claris FileMaker Server OS</h4>
<p>This guide is designed for Ubuntu Linux, rclone can be used on Windows Server &amp; MacOS as well but some of the setup steps will be different.</p>
<h4>Download &amp; Install rclone</h4>
<p>Login as root via SSH to your FileMaker Server and run:</p>
<pre class="language-bash"><code>sudo -v ; curl https://rclone.org/install.sh | sudo bash</code></pre>
<p>On Windows Server, follow the instructions at:</p>
<p class="msg msg--info"><a href="https://rclone.org/install/#windows" target="_blank" rel="noopener noreferrer">https://rclone.org/install/#windows</a></p>
<h4>Setup AWS S3 Bucket &amp; Credentials</h4>
<ul>
<li>Setup an AWS account if you don't already have one and login to AWS Console as an Administrator</li>
<li>From <a href="https://aws.amazon.com/s3" target="_blank" rel="noopener noreferrer">AWS S3 Console</a>, create a new S3 bucket, besides selecting the AWS Region closest to your FileMaker Server you can leave all other settings as default</li>
<li>From AWS IAM Console, open your user page <em>(the same user used to create the s3 bucket)</em> goto "Security credentials" tab then "Access keys" section, click "Create access key"</li>
<li>For "Use case" select "Other", add a description and create the access key</li>
<li>You will only be shown the "Access key" &amp; "Secret" once, make sure you save them in a safe place</li>
</ul>
<p>In some cases, it might be worth considering creating a dedicated AWS IAM user with access to only the backup S3 bucket. Below is an article that further explains the process of how to use policies to limit access to s3 buckets:</p>
<p class="msg msg--info"><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-walkthroughs-managing-access-example1.html" target="_blank" rel="noopener noreferrer">https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-walkthroughs-managing-access-example1.html</a></p>
<h4>Configure rclone Remote</h4>
<p class="p1">On FileMaker Server via SSH run:</p>
<pre class="language-bash"><code>rclone config

# Follow on screen prompts to enter the S3 bucket details and access credentials.
# For Reference:
# provider: AWS
# en_auth: 1
# access_key_id: &lt;your_access_key_id&gt;
# secret_access_key: &lt;your_access_key_secret&gt;
# region: your s3 bucket aws region
# endpoint: leave blank
# location_constraint: same as your region
# acl: 1
# server_side_encryption: leave blank (encryption is already provided by s3)
# storage_class: 1 </code></pre>
<p class="msg msg--info">Reference: <a href="https://rclone.org/s3/" target="_blank" rel="noopener noreferrer">https://rclone.org/s3/</a></p>
<h4>Backup Retention Policy</h4>
<p>How long you need to keep backups for will depend on your organization's business and legal needs. In this guide we will use the following retention policy:</p>
<ul>
<li>Keep daily backups for 90 days (90 backups)</li>
<li>Keep weekly backups for 6 months (24 backups)</li>
<li>Keep Monthly backups for 3 years (36 backups)</li>
</ul>
<p>You can set these parameters along with which day to use for weekly and monthly backups in the rclone backup script further below in this article.</p>
<h4>FileMaker Server Backup Configuration</h4>
<p>This guide assumes that the default FileMaker Server Auto-Backup schedule is enabled and running as the rclone script uses the latest daily backup generated.</p>
<p>The idea here is that FileMaker Server handles the actual backup creation to make it's done properly then the rclone script takes over after that to create off-site copies.</p>
<h4>Off-Site rclone Backup Script</h4>
<p>The script is at my GitHub repo:</p>
<p class="msg msg--info"><a href="https://github.com/mhtawfiq/filemaker-server-rclone" target="_blank" rel="noopener noreferrer">https://github.com/mhtawfiq/filemaker-server-rclone</a></p>
<p>Follow the instructions at the repo to download and set it up and edit the variables inside the script to set rclone remote name, S3 bucket name, retention policy, weekly backup day and monthly backup day:</p>
<pre class="language-bash"><code># FileMaker Server Backups Folder
fmsbackupsf="/opt/FileMaker/FileMaker Server/Data/Backups"

# rclone Remote
rcr="fms-backup"

# S3 Bucket Name
s3="fms-backup1"

# Retention Policy
rdaily=90
rweekly=24
rmonthly=36

# Day of the Week for Weekly Backups
# Monday (1) to Sunday (7)
dweekly=1

# Day of the Month for Monthly Backups
dmonthly=1</code></pre>
<h4>Schedule rclone Script to Run Automatically</h4>
<p>Make sure you allow enough time for FileMaker Server default Auto-Backup to have finished creating the daily backup before running the rclone script.</p>
<p>On FileMaker Server via SSH, using crontab to setup the schedule:</p>
<pre class="language-bash"><code># Logged in as root, select nano to edit crontab
crontab -e

# Add the following line to run daily at 04:00 AM
# Press Ctrl+X then Y to exit and save.
0 4 * * * /root/fms-rclone/fms-rclone.sh

# Check Current Crontab
crontab -l</code></pre>
<p>In the example above, fms-rclone.sh will run at 04:00 AM daily, you can adjust this as needed using crontab syntax.</p>
<p class="msg msg--info">Crontab syntax: <a href="https://crontab.guru/" target="_blank" rel="noopener noreferrer">https://crontab.guru/</a></p>
<h4>Conclusion</h4>
<p>The script should now run on a daily basis copying the latest FileMaker Server Auto-Backup to AWS S3 and maintaining the backup data retention policy configured. </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Deploying FileMaker Server on Ubuntu Linux with Let&#x27;s Encrypt SSL</title>
        <author>
            <name>Mohamed H. Tawfiq</name>
        </author>
        <link href="https://mhtawfiq.github.io/deploying-filemaker-server-on-ubuntu-linux-with-lets-encrypt-ssl/"/>
        <id>https://mhtawfiq.github.io/deploying-filemaker-server-on-ubuntu-linux-with-lets-encrypt-ssl/</id>
        <media:content url="https://mhtawfiq.github.io/media/posts/4/Medium1x.png" medium="image" />
            <category term="Claris FileMaker"/>

        <updated>2023-11-28T20:38:36+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://mhtawfiq.github.io/media/posts/4/Medium1x.png" alt="" />
                    Updated for Claris FileMaker Server 2023.3 &amp; Ubuntu 22 While I am used to deploying Claris FileMaker Server on Windows&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://mhtawfiq.github.io/media/posts/4/Medium1x.png" class="type:primaryImage" alt="" /></p>
                
  <p class="msg msg--highlight">
    Updated for Claris FileMaker Server 2023.3 &amp; Ubuntu 22
  </p>

  <p>
    While I am used to deploying Claris FileMaker Server on Windows Server, I recently needed to do a deployment on linux for the first time. I created this guide as practical reference as I went about the process. I hope you find it useful.
  </p>

    <h4 id="ubuntu-linux">
      Ubuntu Linux
    </h4>

  <p>
    As of FileMaker Server 2023.3.x deployment on linux is supported on Ubuntu 22.xx LTS (Long Term Support) Server.
  </p>

  <p class="msg msg--info align-center">
    <a href="https://support.claris.com/s/article/FileMaker-Server-operating-system-requirements-all-versions-1503692927810?language=en_US" target="_blank" class="" data-link-popup-id="1676900445123">FileMaker Server operating system requirements - all versions</a>
  </p>

  <p>
    <b>Using Ubuntu provides several advantages:</b>
  </p>

  <ul>
    <li>Cost savings on Windows Server licenses</li><li>Better Performance</li><li>Faster deployment, easier automation and maintenance&nbsp;</li>
  </ul>

    <h4 id="cloud-hosting-provider">
      Cloud hosting provider
    </h4>

  <p>
    You can use any cloud hosting provider that provides Ubuntu Linux instances including Amazon Web Services, I have had good experiences with the following providers and prefer them as their pricing and management interfaces are better:
  </p>

  <ul>
    <li><a href="https://www.hetzner.com/cloud" target="_blank">Hetzner</a></li><li><a href="https://www.vultr.com/" target="_blank">Vultr</a></li>
  </ul>

  <p>
    Both have multiple geographical locations and support creating a cloud defined network firewall which we will come back to later in this guide.
  </p>

    <h4 id="generate-ssh-key">
      Generate SSH key
    </h4>

  <p>
    While you can connect to the Linux server using username and password, It's strongly recommended to use public key authentication for security.
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://mhtawfiq.github.io/media/posts/4/SCR-20230220-o1o.png" height="588" width="985" alt="" />
      <figcaption>SSH Key Generation Overview</figcaption>
    </figure>

  <p>
    On MacOS, open Terminal and type the following using your email address:
  </p>
<pre class="line-numbers  language-bash"><code>ssh-keygen -t ed25519 -C "username@domain.com"</code></pre>

  <p>
    You will be prompted to enter a path and filename for the key or accept the default, you can press enter when prompted for a password to skip it, two files will be created at the following path by default:
  </p>

  <ul>
    <li>~/.ssh/id_ed25519 (private key)</li><li>~/.ssh/id_ed25519.pub (public key)</li>
  </ul>
<pre class="line-numbers  language-bash"><code>cat ~/.ssh/id_ed25519.pub
ssh-ed25519 AAAC3NzaC11ZDI1NTE5AAAAIAIeaLEXiTPi5X7+MIT1peMIChRYpsHy 2IOUs+186 username@domain.com
</code></pre>

  <p>
    Will display the contents of your public key so you can copy it the clipboard.
  </p>

  <p>
    To generate an ssh key pair on Windows, you can use <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank">putty</a>. This <a href="https://www.vultr.com/docs/how-do-i-generate-ssh-keys/" target="_blank">article</a> has more information.
  </p>

    <h4 id="deploy-server-instance">
      Deploy server instance
    </h4>

  <p>
    On your cloud hosting provider deploy the new server instance and select the size the of the instance based on the number of your users and server workload:
  </p>

  <ul>
    <li><a href="https://support.claris.com/s/answerview?anum=000036635" target="_blank">Claris FileMaker 2023 Technical Specifications</a><br></li><li><a href="https://support.claris.com/s/article/General-hardware-considerations-for-FileMaker-Server-1503692984025?language=en_US" target="_blank" class="" data-link-popup-id="0621b8ab-6485-439d-89b6-99a10a205e2f">General hardware considerations for FileMaker Server</a><br></li>
  </ul>

  <p>
    The minimum is 4xCPU cores and 8xGB RAM, fast SSD storage is highly recommended. Select Ubuntu 20.xx LTS as operating system.
  </p>

  <p class="msg msg--highlight">
    During deployment, you will be asked to paste your ssh public key created earlier.
  </p>

  <p class="msg msg--info">
    Once the server is running and assigned an IP, assign a subdomain to the server IP via your DNS provider or domain registrar.
  </p>

  <p>
    In this guide we will use <mark>fms.domain.com</mark> as an example.
  </p>

    <h4 id="login-to-the-new-server">
      Login to the new server
    </h4>

  <p>
    To login using your private key generated earlier, type the following in Terminal with the correct path and filename for your private key:
  </p>
<pre class="line-numbers  language-bash"><code># Login as root
ssh root@fms.domain.com -i ~/.ssh/id_ed25519</code></pre>

    <h4 id="installing-filemaker-server">
      Installing FileMaker Server
    </h4>

  <p class="msg msg--success">
    Get the latest FileMaker Server for Ubuntu download url from your Electronic Software Download Page provided by Claris.&nbsp;
  </p>

  <p class="align-center">
    <a href="https://help.claris.com/en/server-installation-configuration-guide/content/installing-single-machine-linux.html" target="_blank">Official Documentation for reference</a>
  </p>
<pre class="line-numbers  language-bash"><code># Update Ubuntu, run this multiple times until there are no more updates
apt update && apt upgrade

# Check & confirm Ubunto version
lsb_release -a

# Install needed packages
apt install wget
apt install unzip
apt install at

# Install FileMaker Server
cd ~/
mkdir fminstaller
cd fminstaller

# Download and unzip
wget https://downloads.claris.com/esd/fms_20.3.1.31_Ubuntu22_amd64.zip
unzip fms_20.3.1.31_Ubuntu22_amd64.zip

# Identify installation filename
ls filemaker*.deb

# Start installation
sudo apt install ./fms_20.3.1.31_Ubuntu22_amd64.deb

# Follow prompts during installation for license, type and admin credentials

# Check & confirm FileMaker Server & Nginx are running
ps -A | grep fm
ps -A | grep nginx</code></pre>

  <p>
    At this point you should have FileMaker Server up and running.
  </p>

    <h4 id="lets-encrypt-ssl-amp-certbot">
      Let's Encrypt SSL &amp; Certbot
    </h4>

  <p class="align-center">
    <a href="https://certbot.eff.org/instructions?ws=nginx&amp;os=ubuntufocal" target="_blank">Official Certbot Documentation for reference</a>
  </p>

  <p>
    Next we will install certbot to generate a Let's Encrypt SSL certificate and setup auto renew as LE certificates expire every 90 days.
  </p>

  <p class="msg msg--info">
    <a href="https://github.com/mhtawfiq/FileMaker-LetsEncrypt-Ubuntu-Nginx" target="_blank">https://github.com/mhtawfiq/FileMaker-LetsEncrypt-Ubuntu-Nginx</a>
  </p>

  <p>
    Follow the instructions at my GitHub repository above to install certbot and download the necessary scripts to generate the SSL certificate for the first time and manage automatic renewal.
  </p>

  <p>
    The scripts will allow you set up a specific time of the day when FileMaker Server can be restarted after a certificate renewal.
  </p>

  <p>
    Check certbot timers and confirm they are running:
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://mhtawfiq.github.io/media/posts/4/SCR-20230221-32b.png" height="829" width="1369" alt="" />
      <figcaption>certbot timers run twice daily at a random hour</figcaption>
    </figure>

  <p>
    The systemctl timers installed by certbot by default check twice a day at a random time if the certificate needs to be renewed, only if the certificate is renewed will it run pre and post hooks for additional processing.
  </p>

  <p>
    Using certbot post hooks insures that once the certificate is renewed by the timers, FileMaker Server will only restart at the time scheduled in <b>renew-cert-at.sh</b> to avoid disruption of access to users at an undesired time.
  </p>

    <h4 id="data-amp-plugins">
      Data &amp; Plugins
    </h4>

  <p>
    The easiest way to transfer databases and files is using an sftp client like <a href="https://binarynights.com/" target="_blank">Forklift</a> or <a href="https://filezilla-project.org/" target="_blank">FileZilla</a> to connect to the server and transfer files.
  </p>
<pre class="line-numbers  language-bash"><code># Databases Path
/opt/FileMaker/FileMaker Server/Data/Databases/

# Database Engine Plugins Path
/opt/FileMaker/FileMaker Server/Database Server/Extensions/

# Custom Web Publishing Plugins Path
/opt/FileMaker/FileMaker Server/Web Publishing/publishing-engine/cwpc/Plugins/

# FileMaker Data API Plugins Path
/opt/FileMaker/FileMaker Server/Web Publishing/publishing-engine/wip/Plugins/</code></pre>

    <h4 id="restarting-filemaker-server-services">
      Restarting FileMaker Server services
    </h4>

  <p>
    Commands below show how to restart all or some of FileMaker Server services when needed after a plugin installation for example.
  </p>
<pre class="line-numbers  language-bash"><code># Start & stop all services
service fmshelper stop
service fmshelper start

# Restart Scripting Engine
fmsadmin restart fmse

# Restart Web Publishing Engine 
fmsadmin restart wpe

# Restart Data API
fmsadmin restart fmdapi
</code></pre>

    <h4 id="filemaker-server-admin-console">
      FileMaker Server Admin Console
    </h4>

  <p>
    You should now be able to access and login to FileMaker Server Admin Console with SSL encryption at:
  </p>

  <p class="msg msg--info">
    https://fms.domain.com/admin-console
  </p>

    <h4 id="firewall">
      Firewall
    </h4>

  <p>
    The final step is to secure the server with firewall rules only allowing necessary access, I prefer to do this using the hosting provider cloud defined network firewall. This offloads some load from the server as the firewall acts at the network level before reaching the server.
  </p>

  <p>
    This also allows you to apply the same firewall rules to multiple servers <i>(development, staging, production)</i> easily.
  </p>

  <p>
    <a href="https://docs.hetzner.com/cloud/firewalls/getting-started/creating-a-firewall/" target="_blank">Hetzner</a>, <a href="https://www.vultr.com/docs/vultr-firewall/" target="_blank">Vultr</a> and <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html" target="_blank">AWS</a> all support defining cloud network firewall rules, follow the links to documentation on how to set it up for each provider.
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://mhtawfiq.github.io/media/posts/4/Screenshot-2023-02-21-at-4.04.47-AM-2.png" height="873" width="1267" alt="" />
      <figcaption>FileMaker Server Firewall Rules setup on Vultr</figcaption>
    </figure>

  <p>
    What is important adding the rules to allow only necessary access:
  </p>

  <p class="msg msg--info align-center">
    <a href="https://help.claris.com/en/server-installation-configuration-guide/content/ports-used-by-server.html" target="_blank">Ports used by FileMaker Server</a>
  </p>

  <p>
    <b>FileMaker Server Firewall needed rules overview:</b><br>
  </p>
<pre class="line-numbers  language-html"><code>accept TCP 22   (SSH) 0.0.0.0/0	
accept TCP 80   (HTTP) 0.0.0.0/0	
accept TCP 443  (HTTPS) 443 0.0.0.0/0	
accept TCP 2399 (ODBC) 0.0.0.0/0	
accept TCP 5003 (FileMaker Clients) 0.0.0.0/0
</code></pre>

  <p>
    If you would still like to use a software firewall on the server itself, <b>ufw</b> comes installed by default on Ubuntu, you can set it up as follows:
  </p>
<pre class="line-numbers  language-bash"><code># Check Status
sudo ufw status

# Add rules
sudo ufw allow 22
sudo ufw allow 80
sudo ufw allow 443
sudo ufw allow 2399
sudo ufw allow 5003

# Enable Firewall
sudo ufw enable

# Disable Firewall
sudo ufw disable</code></pre>

    <h4 id="updating-filemaker-server">
      Updating FileMaker Server
    </h4>

  <p>
    Insure you have a proper backup and stop then:&nbsp;
  </p>
<pre class="line-numbers  language-bash"><code># Stop FileMaker Server service
service fmshelper stop

# Update Ubuntu, run this multiple times until there are no more updates
apt update && apt upgrade
</code></pre>

  <p>
    Then repeat the <a href="#installing-filemaker-server">installation</a> process again, the installer will update necessary dependencies and update FileMaker Server to the new version.
  </p>
            ]]>
        </content>
    </entry>
</feed>
